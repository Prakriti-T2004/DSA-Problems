# Balance a Binary Search Tree

class Solution {
    public TreeNode balanceBST(TreeNode root) {
        List<Integer> li = new ArrayList<>();
        inorder(root, li);

        int left = 0;
        int right = li.size() - 1;
        TreeNode result = constructBST(li, left, right);
        return result;
    }

    public void inorder(TreeNode root, List<Integer> li){
        if(root == null){
            return;
        }
        inorder(root.left, li);
        li.add(root.val);
        inorder(root.right, li);
    }

    public TreeNode constructBST(List<Integer> li, int left, int right){
        if(left > right){
            return null;
        }
        int mid = left + (right - left)/2;

        TreeNode root = new TreeNode(li.get(mid));
        root.left = constructBST(li, left, mid-1);
        root.right = constructBST(li, mid+1, right);

        return root;
    }
}
