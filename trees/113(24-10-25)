# Path Sum 2
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {

        List<List<Integer>> res = new ArrayList<>();
        sum(root, targetSum, 0, res, new ArrayList<>());
        return res;
    }

    public void sum(TreeNode root, int targetSum, int currSum, List<List<Integer>> res, List<Integer> path){
        if(root == null){
            return;
        }

        // Add value of currentnode to currSum and add path
        currSum += root.val;
        path.add(root.val);

        if(root.left == null && root.right == null && currSum == targetSum){
            res.add(new ArrayList<>(path));
        }

        sum(root.left, targetSum, currSum, res, path);
        sum(root.right, targetSum, currSum, res, path);

        path.remove(path.size() - 1);

    }
}
